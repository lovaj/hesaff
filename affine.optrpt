Intel(R) Advisor can now assist with vectorization and show optimization
  report messages with your source code.
See "https://software.intel.com/en-us/intel-advisor-xe" for details.

Intel(R) C++ Intel(R) 64 Compiler for applications running on Intel(R) 64, Version 17.0.1.132 Build 20161005

Compiler options: -I /opt/intel/advisor_2017.1.1.486553/include/ -I/home/luca/ParallelOpenCV/include -O3 -g -qopt-report=5 -simd -Bdynamic -parallel -qopenmp -parallel-source-info=2 -ldl -qopenmp-link dynamic -debug inline-debug-info -shared-intel -xCORE-AVX2 -Wall -std=c++11 -c -o affine.o

    Report from: Interprocedural optimizations [ipo]

  WHOLE PROGRAM (SAFE) [EITHER METHOD]: false
  WHOLE PROGRAM (SEEN) [TABLE METHOD]: false
  WHOLE PROGRAM (READ) [OBJECT READER METHOD]: false

INLINING OPTION VALUES:
  -inline-factor: 100
  -inline-min-size: 30
  -inline-max-size: 230
  -inline-max-total-size: 2000
  -inline-max-per-routine: 10000
  -inline-max-per-compile: 500000

In the inlining report below:
   "sz" refers to the "size" of the routine. The smaller a routine's size,
      the more likely it is to be inlined.
   "isz" refers to the "inlined size" of the routine. This is the amount
      the calling routine will grow if the called routine is inlined into it.
      The compiler generally limits the amount a routine can grow by having
      routines inlined into it.

Begin optimization report for: computeGradient(const cv::Mat &, cv::Mat &, cv::Mat &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (computeGradient(const cv::Mat &, cv::Mat &, cv::Mat &)) [1/62=1.6%] affine.cpp(15,1)
  -> INLINE (MANUAL): (22,34) cv::Mat::at<float>(const cv::Mat *, int, int) const (isz = 4) (sz = 14)
  -> INLINE (MANUAL): (22,57) cv::Mat::at<float>(const cv::Mat *, int, int) const (isz = 4) (sz = 14)
  -> INLINE (MANUAL): (23,43) cv::Mat::at<float>(const cv::Mat *, int, int) const (isz = 4) (sz = 14)
  -> INLINE (MANUAL): (23,64) cv::Mat::at<float>(const cv::Mat *, int, int) const (isz = 4) (sz = 14)
  -> INLINE (MANUAL): (24,28) cv::Mat::at<float>(const cv::Mat *, int, int) const (isz = 4) (sz = 14)
  -> INLINE (MANUAL): (24,51) cv::Mat::at<float>(const cv::Mat *, int, int) const (isz = 4) (sz = 14)
  -> INLINE (MANUAL): (26,34) cv::Mat::at<float>(const cv::Mat *, int, int) const (isz = 4) (sz = 14)
  -> INLINE (MANUAL): (26,57) cv::Mat::at<float>(const cv::Mat *, int, int) const (isz = 4) (sz = 14)
  -> INLINE (MANUAL): (27,44) cv::Mat::at<float>(const cv::Mat *, int, int) const (isz = 4) (sz = 14)
  -> INLINE (MANUAL): (27,65) cv::Mat::at<float>(const cv::Mat *, int, int) const (isz = 4) (sz = 14)
  -> INLINE (MANUAL): (28,28) cv::Mat::at<float>(const cv::Mat *, int, int) const (isz = 4) (sz = 14)
  -> INLINE (MANUAL): (28,51) cv::Mat::at<float>(const cv::Mat *, int, int) const (isz = 4) (sz = 14)
  -> INLINE (MANUAL): (30,16) cv::Mat::at<float>(cv::Mat *, int, int) (isz = 4) (sz = 14)
  -> INLINE (MANUAL): (31,16) cv::Mat::at<float>(cv::Mat *, int, int) (isz = 4) (sz = 14)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at affine.cpp(19,7)
   remark #25261: Invariant Condition eliminated(Proven True) at line 26
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between (img->data+*img->p*r)[c-1] (23:31) and (grady->data+*grady->p*r)[c] (31:16)
   remark #15346: vector dependence: assumed FLOW dependence between (grady->data+*grady->p*r)[c] (31:16) and (img->data+*img->p*r)[c-1] (23:31)
LOOP END

LOOP BEGIN at affine.cpp(18,4)
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed ANTI dependence between (img->data+*img->p*r)[c+1] (22:22) and (grady->data+*grady->p*r)[c] (31:16)
   remark #17106: parallel dependence: assumed FLOW dependence between (grady->data+*grady->p*r)[c] (31:16) and (img->data+*img->p*r)[c+1] (22:22)
   remark #25261: Invariant Condition eliminated(Proven True) at line 22
   remark #25260: Invariant Condition eliminated(Proven False) at line 26
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between (img->data+*img->p*r)[c] (22:22) and (grady->data+*grady->p*r)[c] (31:16)
   remark #15346: vector dependence: assumed FLOW dependence between (grady->data+*grady->p*r)[c] (31:16) and (img->data+*img->p*r)[c] (22:22)

   LOOP BEGIN at affine.cpp(19,7)
   <Predicate Optimized v1>
      remark #17104: loop was not parallelized: existence of parallel dependence
      remark #17106: parallel dependence: assumed ANTI dependence between (img->data+*img->p*r)[c+1] (22:22) and (grady->data+*grady->p*r)[c] (31:16)
      remark #17106: parallel dependence: assumed FLOW dependence between (grady->data+*grady->p*r)[c] (31:16) and (img->data+*img->p*r)[c+1] (22:22)
      remark #25422: Invariant Condition at line 27 hoisted out of this loop
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed ANTI dependence between (img->data+*img->p*r)[c-1] (23:31) and (grady->data+*grady->p*r)[c] (31:16)
      remark #15346: vector dependence: assumed FLOW dependence between (grady->data+*grady->p*r)[c] (31:16) and (img->data+*img->p*r)[c-1] (23:31)
   LOOP END

   LOOP BEGIN at affine.cpp(19,7)
   <Predicate Optimized v2>
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed ANTI dependence between (img->data+*img->p*r)[c-1] (23:31) and (grady->data+*grady->p*r)[c] (31:16)
      remark #15346: vector dependence: assumed FLOW dependence between (grady->data+*grady->p*r)[c] (31:16) and (img->data+*img->p*r)[c-1] (23:31)
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

affine.cpp(15,1):remark #34051: REGISTER ALLOCATION : [_Z15computeGradientRKN2cv3MatERS0_S3_] affine.cpp:15

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   20[ rax rdx rcx rbx rbp rsi rdi r8-r15 zmm0-zmm4]
        
    Routine temporaries
        Total         :      79
            Global    :      55
            Local     :      24
        Regenerable   :       1
        Spilled       :      13
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      56 bytes*
            Reads     :       9 [3.70e+01 ~ 2.8%]
            Writes    :      15 [4.94e+00 ~ 0.4%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: AffineShape::findAffineShape(AffineShape *, const cv::Mat &, float, float, float, float, int, float)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (AffineShape::findAffineShape(AffineShape *, const cv::Mat &, float, float, float, float, int, float)) [2/62=3.2%] affine.cpp(36,1)
  -> EXTERN: (47,7) interpolate(const cv::Mat &, float, float, float, float, float, float, cv::Mat &)
  -> INLINE (MANUAL): (51,29) cv::Mat::ptr<float>(cv::Mat *, int) (isz = 3) (sz = 11)
  -> INLINE (MANUAL): (52,23) cv::Mat::ptr<float>(cv::Mat *, int) (isz = 3) (sz = 11)
  -> INLINE (MANUAL): (52,48) cv::Mat::ptr<float>(cv::Mat *, int) (isz = 3) (sz = 11)
  -> INLINE: (54,7) computeGradient(const cv::Mat &, cv::Mat &, cv::Mat &) (isz = 200) (sz = 209)
    -> INLINE (MANUAL): (22,34) cv::Mat::at<float>(const cv::Mat *, int, int) const (isz = 4) (sz = 14)
    -> INLINE (MANUAL): (22,57) cv::Mat::at<float>(const cv::Mat *, int, int) const (isz = 4) (sz = 14)
    -> INLINE (MANUAL): (23,43) cv::Mat::at<float>(const cv::Mat *, int, int) const (isz = 4) (sz = 14)
    -> INLINE (MANUAL): (23,64) cv::Mat::at<float>(const cv::Mat *, int, int) const (isz = 4) (sz = 14)
    -> INLINE (MANUAL): (24,28) cv::Mat::at<float>(const cv::Mat *, int, int) const (isz = 4) (sz = 14)
    -> INLINE (MANUAL): (24,51) cv::Mat::at<float>(const cv::Mat *, int, int) const (isz = 4) (sz = 14)
    -> INLINE (MANUAL): (26,34) cv::Mat::at<float>(const cv::Mat *, int, int) const (isz = 4) (sz = 14)
    -> INLINE (MANUAL): (26,57) cv::Mat::at<float>(const cv::Mat *, int, int) const (isz = 4) (sz = 14)
    -> INLINE (MANUAL): (27,44) cv::Mat::at<float>(const cv::Mat *, int, int) const (isz = 4) (sz = 14)
    -> INLINE (MANUAL): (27,65) cv::Mat::at<float>(const cv::Mat *, int, int) const (isz = 4) (sz = 14)
    -> INLINE (MANUAL): (28,28) cv::Mat::at<float>(const cv::Mat *, int, int) const (isz = 4) (sz = 14)
    -> INLINE (MANUAL): (28,51) cv::Mat::at<float>(const cv::Mat *, int, int) const (isz = 4) (sz = 14)
    -> INLINE (MANUAL): (30,16) cv::Mat::at<float>(cv::Mat *, int, int) (isz = 4) (sz = 14)
    -> INLINE (MANUAL): (31,16) cv::Mat::at<float>(cv::Mat *, int, int) (isz = 4) (sz = 14)
  -> EXTERN: (72,7) invSqrt(float &, float &, float &, float &, float &)
  -> EXTERN: (85,12) getEigenvalues(float, float, float, float, float &, float &)
  -> INDIRECT- (VIRTUAL): (95,119)  EXPR_CONV.SI64.P64(*((SI64*) ((this_65148_V$2ba.0.60->affineShapeCallback_V$2d6)->__vptr_V$c9 + EXPR_CONV.SI32.I64(0(SI32)) * 8(I64))))
     [[ Unable to inline indirect callsite  <1>]]


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at affine.cpp(44,4)
   remark #17102: loop was not parallelized: not a parallelization candidate
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at affine.cpp(18,4) inlined into affine.cpp(54,7)
      remark #17104: loop was not parallelized: existence of parallel dependence
      remark #17106: parallel dependence: assumed OUTPUT dependence between (gradx->data+*gradx->p*r)[c] (30:16) and (gradx->data+*gradx->p*r)[c] (30:16)
      remark #17106: parallel dependence: assumed OUTPUT dependence between (gradx->data+*gradx->p*r)[c] (30:16) and (gradx->data+*gradx->p*r)[c] (30:16)
      remark #25261: Invariant Condition eliminated(Proven True) at line 22
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at affine.cpp(19,7) inlined into affine.cpp(54,7)
      <Peeled loop for vectorization, Predicate Optimized v1>
         remark #25015: Estimate of max trip count of loop=7
      LOOP END

      LOOP BEGIN at affine.cpp(19,7) inlined into affine.cpp(54,7)
      <Predicate Optimized v1>
         remark #17108: loop was not parallelized: insufficient computational work
         remark #25427: Loop Statements Reordered
         remark #25422: Invariant Condition at line 26 hoisted out of this loop
         remark #15389: vectorization support: reference *(img->data+*img->p+c*4) has unaligned access   [ affine.cpp(26,34) ]
         remark #15389: vectorization support: reference img->data[c] has unaligned access   [ affine.cpp(26,57) ]
         remark #15389: vectorization support: reference (grady->data+*grady->p*r)[c] has unaligned access   [ affine.cpp(31,16) ]
         remark #15389: vectorization support: reference (img->data+*img->p*r)[c] has unaligned access   [ affine.cpp(23,43) ]
         remark #15389: vectorization support: reference (img->data+*img->p*r)[c-1] has unaligned access   [ affine.cpp(23,64) ]
         remark #15389: vectorization support: reference (img->data+*img->p*r)[c+1] has unaligned access   [ affine.cpp(24,28) ]
         remark #15389: vectorization support: reference (img->data+*img->p*r)[c-1] has unaligned access   [ affine.cpp(24,51) ]
         remark #15389: vectorization support: reference (gradx->data+*gradx->p*r)[c] has unaligned access   [ affine.cpp(30,16) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 8
         remark #15309: vectorization support: normalized vectorization overhead 0.700
         remark #15300: LOOP WAS VECTORIZED
         remark #15442: entire loop may be executed in remainder
         remark #15450: unmasked unaligned unit stride loads: 3 
         remark #15451: unmasked unaligned unit stride stores: 2 
         remark #15456: masked unaligned unit stride loads: 2 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 31 
         remark #15477: vector cost: 5.000 
         remark #15478: estimated potential speedup: 5.050 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at affine.cpp(19,7) inlined into affine.cpp(54,7)
      <Remainder loop for vectorization, Predicate Optimized v1>
      LOOP END

      LOOP BEGIN at affine.cpp(19,7) inlined into affine.cpp(54,7)
      <Peeled loop for vectorization, Predicate Optimized v3>
         remark #25015: Estimate of max trip count of loop=7
      LOOP END

      LOOP BEGIN at affine.cpp(19,7) inlined into affine.cpp(54,7)
      <Predicate Optimized v3>
         remark #25422: Invariant Condition at line 27 hoisted out of this loop
         remark #15389: vectorization support: reference (img->data+*img->p*r)[c] has unaligned access   [ affine.cpp(27,44) ]
         remark #15389: vectorization support: reference (img->data+*img->p*(r-1))[c] has unaligned access   [ affine.cpp(27,65) ]
         remark #15389: vectorization support: reference (grady->data+*grady->p*r)[c] has unaligned access   [ affine.cpp(31,16) ]
         remark #15389: vectorization support: reference (img->data+*img->p*r)[c] has unaligned access   [ affine.cpp(23,43) ]
         remark #15389: vectorization support: reference (img->data+*img->p*r)[c-1] has unaligned access   [ affine.cpp(23,64) ]
         remark #15389: vectorization support: reference (img->data+*img->p*r)[c+1] has unaligned access   [ affine.cpp(24,28) ]
         remark #15389: vectorization support: reference (img->data+*img->p*r)[c-1] has unaligned access   [ affine.cpp(24,51) ]
         remark #15389: vectorization support: reference (gradx->data+*gradx->p*r)[c] has unaligned access   [ affine.cpp(30,16) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 8
         remark #15309: vectorization support: normalized vectorization overhead 0.658
         remark #15300: LOOP WAS VECTORIZED
         remark #15442: entire loop may be executed in remainder
         remark #15450: unmasked unaligned unit stride loads: 3 
         remark #15451: unmasked unaligned unit stride stores: 2 
         remark #15456: masked unaligned unit stride loads: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 29 
         remark #15477: vector cost: 4.750 
         remark #15478: estimated potential speedup: 4.990 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at affine.cpp(19,7) inlined into affine.cpp(54,7)
      <Remainder loop for vectorization, Predicate Optimized v3>
      LOOP END

      LOOP BEGIN at affine.cpp(19,7) inlined into affine.cpp(54,7)
      <Peeled loop for vectorization, Predicate Optimized v4>
         remark #25015: Estimate of max trip count of loop=7
      LOOP END

      LOOP BEGIN at affine.cpp(19,7) inlined into affine.cpp(54,7)
      <Predicate Optimized v4>
         remark #15389: vectorization support: reference (img->data+*img->p*(r+1))[c] has unaligned access   [ affine.cpp(28,28) ]
         remark #15389: vectorization support: reference (img->data+*img->p*(r-1))[c] has unaligned access   [ affine.cpp(28,51) ]
         remark #15389: vectorization support: reference (grady->data+*grady->p*r)[c] has unaligned access   [ affine.cpp(31,16) ]
         remark #15389: vectorization support: reference (img->data+*img->p*r)[c] has unaligned access   [ affine.cpp(23,43) ]
         remark #15389: vectorization support: reference (img->data+*img->p*r)[c-1] has unaligned access   [ affine.cpp(23,64) ]
         remark #15389: vectorization support: reference (img->data+*img->p*r)[c+1] has unaligned access   [ affine.cpp(24,28) ]
         remark #15389: vectorization support: reference (img->data+*img->p*r)[c-1] has unaligned access   [ affine.cpp(24,51) ]
         remark #15389: vectorization support: reference (gradx->data+*gradx->p*r)[c] has unaligned access   [ affine.cpp(30,16) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 8
         remark #15309: vectorization support: normalized vectorization overhead 0.700
         remark #15300: LOOP WAS VECTORIZED
         remark #15442: entire loop may be executed in remainder
         remark #15450: unmasked unaligned unit stride loads: 3 
         remark #15451: unmasked unaligned unit stride stores: 2 
         remark #15456: masked unaligned unit stride loads: 2 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 29 
         remark #15477: vector cost: 5.000 
         remark #15478: estimated potential speedup: 4.790 
         remark #15488: --- end vector cost summary ---
      LOOP END

      LOOP BEGIN at affine.cpp(19,7) inlined into affine.cpp(54,7)
      <Remainder loop for vectorization, Predicate Optimized v4>
      LOOP END
   LOOP END

   LOOP BEGIN at affine.cpp(57,7)
      remark #17104: loop was not parallelized: existence of parallel dependence
      remark #17106: parallel dependence: assumed ANTI dependence between *maskptr (59:28) and c (66:10)
      remark #17106: parallel dependence: assumed FLOW dependence between c (66:10) and *maskptr (59:28)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed ANTI dependence between *maskptr (59:28) and c (66:10)
      remark #15346: vector dependence: assumed FLOW dependence between c (66:10) and *maskptr (59:28)
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

affine.cpp(24,51):remark #34060: alignment of adjacent dense (unit-strided stencil) loads is (alignment, offset): (1, 0)
affine.cpp(24,51):remark #34050: optimization of adjacent dense (unit-strided stencil) loads seems unprofitable.
affine.cpp(24,51):remark #34055: adjacent dense (unit-strided stencil) loads are not optimized. Details: stride { 4 }, step { 4 }, types { F32-V256, F32-V256 }, number of elements { 8 }, select mask { 0x000000003 }.
affine.cpp(36,1):remark #34051: REGISTER ALLOCATION : [_ZN11AffineShape15findAffineShapeERKN2cv3MatEffffif] affine.cpp:36

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   30[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm15]
        
    Routine temporaries
        Total         :     314
            Global    :     121
            Local     :     193
        Regenerable   :      22
        Spilled       :      54
        
    Routine stack
        Variables     :      20 bytes*
            Reads     :      10 [1.43e+01 ~ 0.2%]
            Writes    :      11 [3.01e+01 ~ 0.4%]
        Spills        :     456 bytes*
            Reads     :     116 [4.12e+02 ~ 5.5%]
            Writes    :      89 [3.94e+02 ~ 5.3%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Destroy<std::_Vector_base<uchar, std::allocator<uchar>>::pointer, uchar>(std::_Vector_base<uchar, std::allocator<uchar>>::pointer, std::_Vector_base<uchar, std::allocator<uchar>>::pointer, std::allocator<uchar> &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::_Destroy<std::_Vector_base<uchar, std::allocator<uchar>>::pointer, uchar>(std::_Vector_base<uchar, std::allocator<uchar>>::pointer, std::_Vector_base<uchar, std::allocator<uchar>>::pointer, std::allocator<uchar> &)) /usr/include/c++/5/bits/stl_construct.h(150,5)

===========================================================================

Begin optimization report for: std::_Vector_base<uchar, std::allocator<uchar>>::_M_deallocate(std::_Vector_base<uchar, std::allocator<uchar>> *, std::_Vector_base<uchar, std::allocator<uchar>>::pointer, std::size_t)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (std::_Vector_base<uchar, std::allocator<uchar>>::_M_deallocate(std::_Vector_base<uchar, std::allocator<uchar>> *, std::_Vector_base<uchar, std::allocator<uchar>>::pointer, std::size_t)) [4/62=6.5%] /usr/include/c++/5/bits/stl_vector.h(175,7)
  -> INLINE (MANUAL): (178,4) std::allocator_traits<std::allocator<uchar>>::deallocate(std::allocator_traits<std::allocator<uchar>>::allocator_type &, std::allocator_traits<std::allocator<uchar>>::pointer, std::allocator_traits<std::allocator<uchar>>::size_type) (isz = 0) (sz = 9)
    -> INLINE (MANUAL): /usr/include/c++/5/bits/alloc_traits.h:(517,13) __gnu_cxx::new_allocator<uchar>::deallocate(__gnu_cxx::new_allocator<uchar> *, __gnu_cxx::new_allocator<uchar>::pointer, __gnu_cxx::new_allocator<uchar>::size_type) (isz = 0) (sz = 7)
      -> EXTERN: /usr/include/c++/5/ext/new_allocator.h:(110,9) operator delete(void *)


    Report from: Code generation optimizations [cg]

/usr/include/c++/5/bits/stl_vector.h(175,7):remark #34051: REGISTER ALLOCATION : [_ZNSt12_Vector_baseIhSaIhEE13_M_deallocateEPhm] /usr/include/c++/5/bits/stl_vector.h:175

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rdx rsi rdi]
        
    Routine temporaries
        Total         :      11
            Global    :       7
            Local     :       4
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Vector_base<uchar, std::allocator<uchar>>::_M_get_Tp_allocator(std::_Vector_base<uchar, std::allocator<uchar>> *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (std::_Vector_base<uchar, std::allocator<uchar>>::_M_get_Tp_allocator(std::_Vector_base<uchar, std::allocator<uchar>> *)) [5/62=8.1%] /usr/include/c++/5/bits/stl_vector.h(114,7)


    Report from: Code generation optimizations [cg]

/usr/include/c++/5/bits/stl_vector.h(114,7):remark #34051: REGISTER ALLOCATION : [_ZNSt12_Vector_baseIhSaIhEE19_M_get_Tp_allocatorEv] /usr/include/c++/5/bits/stl_vector.h:114

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    2[ rax rdi]
        
    Routine temporaries
        Total         :       9
            Global    :       0
            Local     :       9
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: cv::String::~String(cv::String *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (cv::String::~String(cv::String *)) [6/62=9.7%] /usr/local/include/opencv2/core/cvstd.hpp(663,1)
  -> EXTERN: (663,1) __cxa_call_unexpected
  -> EXTERN: (664,5) cv::String::deallocate(cv::String *)


    Report from: Code generation optimizations [cg]

/usr/local/include/opencv2/core/cvstd.hpp(663,1):remark #34051: REGISTER ALLOCATION : [_ZN2cv6StringD1Ev] /usr/local/include/opencv2/core/cvstd.hpp:663

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rax rdx rdi]
        
    Routine temporaries
        Total         :      18
            Global    :       6
            Local     :      12
        Regenerable   :       1
        Spilled       :       0
        
    Routine stack
        Variables     :       8 bytes*
            Reads     :       2 [0.00e+00 ~ 0.0%]
            Writes    :       1 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: cv::Mat::~Mat(cv::Mat *)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (cv::Mat::~Mat(cv::Mat *)) [7/62=11.3%] /usr/local/include/opencv2/core/mat.inl.hpp(589,1)
  -> EXTERN: (589,1) __cxa_call_unexpected
  -> INLINE (MANUAL): (590,5) cv::Mat::release(cv::Mat *) (isz = 47) (sz = 52)
    -> EXTERN: (703,14) __atomic_fetch_add_4(volatile void *, unsigned int, int)
    -> EXTERN: (704,9) cv::Mat::deallocate(cv::Mat *)
  -> EXTERN: (592,9) cv::fastFree(void *)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /usr/local/include/opencv2/core/mat.inl.hpp(707,5) inlined into /usr/local/include/opencv2/core/mat.inl.hpp(591,5)
   remark #17102: loop was not parallelized: not a parallelization candidate
   remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop
   remark #25478: While Loop Unrolled by 2  
LOOP END

    Report from: Code generation optimizations [cg]

/usr/local/include/opencv2/core/mat.inl.hpp(589,1):remark #34051: REGISTER ALLOCATION : [_ZN2cv3MatD1Ev] /usr/local/include/opencv2/core/mat.inl.hpp:589

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rax rdx rcx rsi rdi r14]
        
    Routine temporaries
        Total         :      32
            Global    :      14
            Local     :      18
        Regenerable   :       3
        Spilled       :       1
        
    Routine stack
        Variables     :       8 bytes*
            Reads     :       2 [0.00e+00 ~ 0.0%]
            Writes    :       1 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: __gnu_cxx::new_allocator<uchar>::max_size(const __gnu_cxx::new_allocator<uchar> *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (__gnu_cxx::new_allocator<uchar>::max_size(const __gnu_cxx::new_allocator<uchar> *) const) /usr/include/c++/5/ext/new_allocator.h(114,7)

===========================================================================

Begin optimization report for: AffineShape::normalizeAffine(AffineShape *, const cv::Mat &, float, float, float, float, float, float, float)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (AffineShape::normalizeAffine(AffineShape *, const cv::Mat &, float, float, float, float, float, float, float)) [9/62=14.5%] affine.cpp(103,1)
  -> EXTERN: (105,4) __assert_fail(const char *, const char *, unsigned int, const char *)
  -> EXTERN: (106,20) ceil(double)
  -> EXTERN: (112,8) interpolateCheckBorders(const cv::Mat &, float, float, float, float, float, float, const cv::Mat &)
  -> INLINE (MANUAL): (121,28) std::vector<uchar, std::allocator<uchar>>::size(const std::vector<uchar, std::allocator<uchar>> *) const (isz = 4) (sz = 11)
  -> INLINE (MANUAL): (122,20) std::vector<uchar, std::allocator<uchar>>::resize(std::vector<uchar, std::allocator<uchar>> *, std::vector<uchar, std::allocator<uchar>>::size_type) (isz = 373) (sz = 380)
    -> INLINE (MANUAL): /usr/include/c++/5/bits/stl_vector.h:(675,19) std::vector<uchar, std::allocator<uchar>>::size(const std::vector<uchar, std::allocator<uchar>> *) const (isz = 4) (sz = 11)
    -> INLINE (MANUAL): /usr/include/c++/5/bits/stl_vector.h:(676,4) std::vector<uchar, std::allocator<uchar>>::_M_default_append(std::vector<uchar, std::allocator<uchar>> *, std::vector<uchar, std::allocator<uchar>>::size_type) (isz = 328) (sz = 335)
      -> INLINE (MANUAL): /usr/include/c++/5/bits/vector.tcc:(549,3) std::__uninitialized_default_n_a<std::_Vector_base<uchar, std::allocator<uchar>>::pointer, std::vector<uchar, std::allocator<uchar>>::size_type, uchar>(std::_Vector_base<uchar, std::allocator<uchar>>::pointer, std::vector<uchar, std::allocator<uchar>>::size_type, std::allocator<uchar> &) (isz = 23) (sz = 34)
        -> INLINE (MANUAL): /usr/include/c++/5/bits/stl_uninitialized.h:(637,14) std::__uninitialized_default_n<std::_Vector_base<uchar, std::allocator<uchar>>::pointer, std::vector<uchar, std::allocator<uchar>>::size_type>(std::_Vector_base<uchar, std::allocator<uchar>>::pointer, std::vector<uchar, std::allocator<uchar>>::size_type) (isz = 23) (sz = 32)
          -> INLINE (MANUAL): (573,14) std::__uninitialized_default_n_1<true>::__uninit_default_n<std::_Vector_base<uchar, std::allocator<uchar>>::pointer, std::vector<uchar, std::allocator<uchar>>::size_type>(std::_Vector_base<uchar, std::allocator<uchar>>::pointer, std::vector<uchar, std::allocator<uchar>>::size_type) (isz = 21) (sz = 30)
            -> INLINE (MANUAL): (540,11) std::fill_n<std::_Vector_base<uchar, std::allocator<uchar>>::pointer, std::vector<uchar, std::allocator<uchar>>::size_type, std::iterator_traits<std::_Vector_base<uchar, std::allocator<uchar>>::pointer>::value_type>(std::_Vector_base<uchar, std::allocator<uchar>>::pointer, std::vector<uchar, std::allocator<uchar>>::size_type, const std::iterator_traits<std::_Vector_base<uchar, std::allocator<uchar>>::pointer>::value_type &) (isz = 17) (sz = 28)
              -> INLINE (MANUAL): /usr/include/c++/5/bits/stl_algobase.h:(805,18) std::__fill_n_a<std::vector<uchar, std::allocator<uchar>>::size_type, uchar>(uchar *, std::vector<uchar, std::allocator<uchar>>::size_type, const uchar &) (isz = 12) (sz = 23)
                -> INLINE (MANUAL): (779,7) std::__fill_a<uchar>(uchar *, uchar *, const uchar &) (isz = 10) (sz = 19)
                  -> EXTERN: (723,2) __builtin_memset(void *, int, unsigned long)
              -> INLINE (MANUAL): /usr/include/c++/5/bits/stl_algobase.h:(805,34) std::__niter_base<std::_Vector_base<uchar, std::allocator<uchar>>::pointer>(std::_Vector_base<uchar, std::allocator<uchar>>::pointer) (isz = 1) (sz = 8)
                -> INLINE (MANUAL): (283,14) std::_Iter_base<std::_Vector_base<uchar, std::allocator<uchar>>::pointer, false>::_S_base(std::_Vector_base<uchar, std::allocator<uchar>>::pointer) (isz = 0) (sz = 5)
      -> INLINE (MANUAL): /usr/include/c++/5/bits/vector.tcc:(550,13) std::_Vector_base<uchar, std::allocator<uchar>>::_M_get_Tp_allocator(std::_Vector_base<uchar, std::allocator<uchar>> *) (isz = 1) (sz = 8)
      -> INLINE (MANUAL): /usr/include/c++/5/bits/vector.tcc:(555,3) std::vector<uchar, std::allocator<uchar>>::_M_check_len(const std::vector<uchar, std::allocator<uchar>> *, std::vector<uchar, std::allocator<uchar>>::size_type, const char *) const (isz = 96) (sz = 107)
        -> INLINE (MANUAL): /usr/include/c++/5/bits/stl_vector.h:(1424,6) std::vector<uchar, std::allocator<uchar>>::max_size(const std::vector<uchar, std::allocator<uchar>> *) const (isz = 12) (sz = 19)
          -> INLINE (MANUAL): (660,16) std::allocator_traits<std::allocator<uchar>>::max_size(const std::allocator_traits<std::allocator<uchar>>::allocator_type &) (isz = 4) (sz = 11)
            -> DELETED: /usr/include/c++/5/bits/alloc_traits.h:(551,20) __gnu_cxx::new_allocator<uchar>::max_size(const __gnu_cxx::new_allocator<uchar> *) const (isz = 0) (sz = 5)
          -> INLINE (MANUAL): (660,40) std::_Vector_base<uchar, std::allocator<uchar>>::_M_get_Tp_allocator(const std::_Vector_base<uchar, std::allocator<uchar>> *) const (isz = 1) (sz = 8)
        -> INLINE (MANUAL): /usr/include/c++/5/bits/stl_vector.h:(1424,19) std::vector<uchar, std::allocator<uchar>>::size(const std::vector<uchar, std::allocator<uchar>> *) const (isz = 4) (sz = 11)
        -> EXTERN: /usr/include/c++/5/bits/stl_vector.h:(1425,4) std::__throw_length_error(const char *)
        -> INLINE (MANUAL): /usr/include/c++/5/bits/stl_vector.h:(1427,26) std::vector<uchar, std::allocator<uchar>>::size(const std::vector<uchar, std::allocator<uchar>> *) const (isz = 4) (sz = 11)
        -> INLINE (MANUAL): /usr/include/c++/5/bits/stl_vector.h:(1427,35) std::max<std::vector<std::seed_seq::result_type, std::allocator<std::seed_seq::result_type>>::size_type>(const std::vector<std::seed_seq::result_type, std::allocator<std::seed_seq::result_type>>::size_type &, const std::vector<std::seed_seq::result_type, std::allocator<std::seed_seq::result_type>>::size_type &) (isz = 2) (sz = 12)
        -> INLINE (MANUAL): /usr/include/c++/5/bits/stl_vector.h:(1427,44) std::vector<uchar, std::allocator<uchar>>::size(const std::vector<uchar, std::allocator<uchar>> *) const (isz = 4) (sz = 11)
        -> INLINE (MANUAL): /usr/include/c++/5/bits/stl_vector.h:(1428,18) std::vector<uchar, std::allocator<uchar>>::size(const std::vector<uchar, std::allocator<uchar>> *) const (isz = 4) (sz = 11)
        -> INLINE (MANUAL): /usr/include/c++/5/bits/stl_vector.h:(1428,36) std::vector<uchar, std::allocator<uchar>>::max_size(const std::vector<uchar, std::allocator<uchar>> *) const (isz = 12) (sz = 19)
          -> INLINE (MANUAL): (660,16) std::allocator_traits<std::allocator<uchar>>::max_size(const std::allocator_traits<std::allocator<uchar>>::allocator_type &) (isz = 4) (sz = 11)
            -> DELETED: /usr/include/c++/5/bits/alloc_traits.h:(551,20) __gnu_cxx::new_allocator<uchar>::max_size(const __gnu_cxx::new_allocator<uchar> *) const (isz = 0) (sz = 5)
          -> INLINE (MANUAL): (660,40) std::_Vector_base<uchar, std::allocator<uchar>>::_M_get_Tp_allocator(const std::_Vector_base<uchar, std::allocator<uchar>> *) const (isz = 1) (sz = 8)
        -> INLINE (MANUAL): /usr/include/c++/5/bits/stl_vector.h:(1428,50) std::vector<uchar, std::allocator<uchar>>::max_size(const std::vector<uchar, std::allocator<uchar>> *) const (isz = 12) (sz = 19)
          -> INLINE (MANUAL): (660,16) std::allocator_traits<std::allocator<uchar>>::max_size(const std::allocator_traits<std::allocator<uchar>>::allocator_type &) (isz = 4) (sz = 11)
            -> DELETED: /usr/include/c++/5/bits/alloc_traits.h:(551,20) __gnu_cxx::new_allocator<uchar>::max_size(const __gnu_cxx::new_allocator<uchar> *) const (isz = 0) (sz = 5)
          -> INLINE (MANUAL): (660,40) std::_Vector_base<uchar, std::allocator<uchar>>::_M_get_Tp_allocator(const std::_Vector_base<uchar, std::allocator<uchar>> *) const (isz = 1) (sz = 8)
      -> INLINE (MANUAL): /usr/include/c++/5/bits/vector.tcc:(556,43) std::vector<uchar, std::allocator<uchar>>::size(const std::vector<uchar, std::allocator<uchar>> *) const (isz = 4) (sz = 11)
      -> INLINE (MANUAL): /usr/include/c++/5/bits/vector.tcc:(557,34) std::_Vector_base<uchar, std::allocator<uchar>>::_M_allocate(std::_Vector_base<uchar, std::allocator<uchar>> *, std::size_t) (isz = 16) (sz = 25)
        -> INLINE (MANUAL): /usr/include/c++/5/bits/stl_vector.h:(170,20) std::allocator_traits<std::allocator<uchar>>::allocate(std::allocator_traits<std::allocator<uchar>>::allocator_type &, std::allocator_traits<std::allocator<uchar>>::size_type) (isz = 9) (sz = 18)
          -> INLINE (MANUAL): /usr/include/c++/5/bits/alloc_traits.h:(491,20) __gnu_cxx::new_allocator<uchar>::allocate(__gnu_cxx::new_allocator<uchar> *, __gnu_cxx::new_allocator<uchar>::size_type, const void *) (isz = 7) (sz = 18)
            -> DELETED: /usr/include/c++/5/ext/new_allocator.h:(101,18) __gnu_cxx::new_allocator<uchar>::max_size(const __gnu_cxx::new_allocator<uchar> *) const (isz = 0) (sz = 5)
            -> EXTERN: /usr/include/c++/5/ext/new_allocator.h:(102,4) std::__throw_bad_alloc()
            -> EXTERN: /usr/include/c++/5/ext/new_allocator.h:(104,27) operator new(std::size_t)
      -> INLINE (MANUAL): /usr/include/c++/5/bits/vector.tcc:(562,9) std::__uninitialized_move_if_noexcept_a<std::_Vector_base<uchar, std::allocator<uchar>>::pointer, std::vector<uchar, std::allocator<uchar>>::pointer, std::_Vector_base<uchar, std::allocator<uchar>>::_Tp_alloc_type>(std::_Vector_base<uchar, std::allocator<uchar>>::pointer, std::_Vector_base<uchar, std::allocator<uchar>>::pointer, std::vector<uchar, std::allocator<uchar>>::pointer, std::_Vector_base<uchar, std::allocator<uchar>>::_Tp_alloc_type &) (isz = 52) (sz = 65)
        -> INLINE (MANUAL): /usr/include/c++/5/bits/stl_uninitialized.h:(302,14) std::__uninitialized_copy_a<std::move_iterator<std::_Vector_base<uchar, std::allocator<uchar>>::pointer>, std::vector<uchar, std::allocator<uchar>>::pointer, uchar>(std::move_iterator<std::_Vector_base<uchar, std::allocator<uchar>>::pointer>, std::move_iterator<std::_Vector_base<uchar, std::allocator<uchar>>::pointer>, std::vector<uchar, std::allocator<uchar>>::pointer, std::allocator<uchar> &) (isz = 41) (sz = 54)
          -> INLINE (MANUAL): (281,14) std::uninitialized_copy<std::move_iterator<std::_Vector_base<uchar, std::allocator<uchar>>::pointer>, std::vector<uchar, std::allocator<uchar>>::pointer>(std::move_iterator<std::_Vector_base<uchar, std::allocator<uchar>>::pointer>, std::move_iterator<std::_Vector_base<uchar, std::allocator<uchar>>::pointer>, std::vector<uchar, std::allocator<uchar>>::pointer) (isz = 41) (sz = 52)
            -> INLINE (MANUAL): (123,14) std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<std::_Vector_base<uchar, std::allocator<uchar>>::pointer>, std::vector<uchar, std::allocator<uchar>>::pointer>(std::move_iterator<std::_Vector_base<uchar, std::allocator<uchar>>::pointer>, std::move_iterator<std::_Vector_base<uchar, std::allocator<uchar>>::pointer>, std::vector<uchar, std::allocator<uchar>>::pointer) (isz = 39) (sz = 50)
              -> INLINE (MANUAL): (93,18) std::copy<std::move_iterator<std::_Vector_base<uchar, std::allocator<uchar>>::pointer>, std::vector<uchar, std::allocator<uchar>>::pointer>(std::move_iterator<std::_Vector_base<uchar, std::allocator<uchar>>::pointer>, std::move_iterator<std::_Vector_base<uchar, std::allocator<uchar>>::pointer>, std::vector<uchar, std::allocator<uchar>>::pointer) (isz = 38) (sz = 49)
                -> INLINE (MANUAL): /usr/include/c++/5/bits/stl_algobase.h:(470,15) std::__copy_move_a2<true, std::_Iter_base<std::move_iterator<std::_Vector_base<uchar, std::allocator<uchar>>::pointer>, true>::iterator_type, std::vector<uchar, std::allocator<uchar>>::pointer>(std::_Iter_base<std::move_iterator<std::_Vector_base<uchar, std::allocator<uchar>>::pointer>, true>::iterator_type, std::_Iter_base<std::move_iterator<std::_Vector_base<uchar, std::allocator<uchar>>::pointer>, true>::iterator_type, std::vector<uchar, std::allocator<uchar>>::pointer) (isz = 25) (sz = 36)
                  -> INLINE (MANUAL): (438,18) std::__copy_move_a<true, std::_Iter_base<std::_Vector_base<uchar, std::allocator<uchar>>::pointer, false>::iterator_type, std::_Iter_base<std::_Vector_base<uchar, std::allocator<uchar>>::pointer, false>::iterator_type>(std::_Iter_base<std::_Vector_base<uchar, std::allocator<uchar>>::pointer, false>::iterator_type, std::_Iter_base<std::_Vector_base<uchar, std::allocator<uchar>>::pointer, false>::iterator_type, std::_Iter_base<std::_Vector_base<uchar, std::allocator<uchar>>::pointer, false>::iterator_type) (isz = 12) (sz = 23)
                    -> INLINE (MANUAL): (401,14) std::__copy_move<true, true, std::iterator_traits<std::vector<std::seed_seq::result_type, std::allocator<std::seed_seq::result_type>>::pointer>::iterator_category>::__copy_m<uchar>(const uchar *, const uchar *, uchar *) (isz = 10) (sz = 21)
                      -> EXTERN: (384,6) __builtin_memmove(void *, const void *, unsigned long)
                  -> INLINE (MANUAL): (438,46) std::__niter_base<std::_Vector_base<uchar, std::allocator<uchar>>::pointer>(std::_Vector_base<uchar, std::allocator<uchar>>::pointer) (isz = 1) (sz = 8)
                    -> INLINE (MANUAL): (283,14) std::_Iter_base<std::_Vector_base<uchar, std::allocator<uchar>>::pointer, false>::_S_base(std::_Vector_base<uchar, std::allocator<uchar>>::pointer) (isz = 0) (sz = 5)
                  -> INLINE (MANUAL): (439,11) std::__niter_base<std::_Vector_base<uchar, std::allocator<uchar>>::pointer>(std::_Vector_base<uchar, std::allocator<uchar>>::pointer) (isz = 1) (sz = 8)
                    -> INLINE (MANUAL): (283,14) std::_Iter_base<std::_Vector_base<uchar, std::allocator<uchar>>::pointer, false>::_S_base(std::_Vector_base<uchar, std::allocator<uchar>>::pointer) (isz = 0) (sz = 5)
                  -> INLINE (MANUAL): (440,11) std::__niter_base<std::_Vector_base<uchar, std::allocator<uchar>>::pointer>(std::_Vector_base<uchar, std::allocator<uchar>>::pointer) (isz = 1) (sz = 8)
                    -> INLINE (MANUAL): (283,14) std::_Iter_base<std::_Vector_base<uchar, std::allocator<uchar>>::pointer, false>::_S_base(std::_Vector_base<uchar, std::allocator<uchar>>::pointer) (isz = 0) (sz = 5)
                -> INLINE (MANUAL): /usr/include/c++/5/bits/stl_algobase.h:(471,9) std::__miter_base<std::move_iterator<std::_Vector_base<uchar, std::allocator<uchar>>::pointer>>(std::move_iterator<std::_Vector_base<uchar, std::allocator<uchar>>::pointer>) (isz = 3) (sz = 10)
                  -> INLINE (MANUAL): (294,14) std::_Iter_base<std::move_iterator<std::_Vector_base<uchar, std::allocator<uchar>>::pointer>, true>::_S_base(std::move_iterator<std::_Vector_base<uchar, std::allocator<uchar>>::pointer>) (isz = 2) (sz = 9)
                    -> INLINE (MANUAL): /usr/include/c++/5/bits/stl_iterator_base_types.h:(224,21) std::move_iterator<std::_Vector_base<uchar, std::allocator<uchar>>::pointer>::base(const std::move_iterator<std::_Vector_base<uchar, std::allocator<uchar>>::pointer> *) const (isz = 0) (sz = 6)
                -> INLINE (MANUAL): /usr/include/c++/5/bits/stl_algobase.h:(471,37) std::__miter_base<std::move_iterator<std::_Vector_base<uchar, std::allocator<uchar>>::pointer>>(std::move_iterator<std::_Vector_base<uchar, std::allocator<uchar>>::pointer>) (isz = 3) (sz = 10)
                  -> INLINE (MANUAL): (294,14) std::_Iter_base<std::move_iterator<std::_Vector_base<uchar, std::allocator<uchar>>::pointer>, true>::_S_base(std::move_iterator<std::_Vector_base<uchar, std::allocator<uchar>>::pointer>) (isz = 2) (sz = 9)
                    -> INLINE (MANUAL): /usr/include/c++/5/bits/stl_iterator_base_types.h:(224,21) std::move_iterator<std::_Vector_base<uchar, std::allocator<uchar>>::pointer>::base(const std::move_iterator<std::_Vector_base<uchar, std::allocator<uchar>>::pointer> *) const (isz = 0) (sz = 6)
        -> INLINE (MANUAL): /usr/include/c++/5/bits/stl_uninitialized.h:(303,3) std::__make_move_if_noexcept_iterator<std::_Vector_base<uchar, std::allocator<uchar>>::pointer, std::move_iterator<std::_Vector_base<uchar, std::allocator<uchar>>::pointer>>(std::_Vector_base<uchar, std::allocator<uchar>>::pointer) (isz = 2) (sz = 9)
          -> INLINE (MANUAL): /usr/include/c++/5/bits/stl_iterator.h:(1167,26) std::move_iterator<std::_Vector_base<uchar, std::allocator<uchar>>::pointer>::move_iterator(std::move_iterator<std::_Vector_base<uchar, std::allocator<uchar>>::pointer> *, std::move_iterator<std::_Vector_base<uchar, std::allocator<uchar>>::pointer>::iterator_type) (isz = 0) (sz = 6)
        -> INLINE (MANUAL): /usr/include/c++/5/bits/stl_uninitialized.h:(304,3) std::__make_move_if_noexcept_iterator<std::_Vector_base<uchar, std::allocator<uchar>>::pointer, std::move_iterator<std::_Vector_base<uchar, std::allocator<uchar>>::pointer>>(std::_Vector_base<uchar, std::allocator<uchar>>::pointer) (isz = 2) (sz = 9)
          -> INLINE (MANUAL): /usr/include/c++/5/bits/stl_iterator.h:(1167,26) std::move_iterator<std::_Vector_base<uchar, std::allocator<uchar>>::pointer>::move_iterator(std::move_iterator<std::_Vector_base<uchar, std::allocator<uchar>>::pointer> *, std::move_iterator<std::_Vector_base<uchar, std::allocator<uchar>>::pointer>::iterator_type) (isz = 0) (sz = 6)
      -> INLINE (MANUAL): /usr/include/c++/5/bits/vector.tcc:(564,21) std::_Vector_base<uchar, std::allocator<uchar>>::_M_get_Tp_allocator(std::_Vector_base<uchar, std::allocator<uchar>> *) (isz = 1) (sz = 8)
      -> INLINE (MANUAL): /usr/include/c++/5/bits/vector.tcc:(566,7) std::__uninitialized_default_n_a<std::_Vector_base<uchar, std::allocator<uchar>>::pointer, std::vector<uchar, std::allocator<uchar>>::size_type, uchar>(std::_Vector_base<uchar, std::allocator<uchar>>::pointer, std::vector<uchar, std::allocator<uchar>>::size_type, std::allocator<uchar> &) (isz = 23) (sz = 34)
        -> INLINE (MANUAL): /usr/include/c++/5/bits/stl_uninitialized.h:(637,14) std::__uninitialized_default_n<std::_Vector_base<uchar, std::allocator<uchar>>::pointer, std::vector<uchar, std::allocator<uchar>>::size_type>(std::_Vector_base<uchar, std::allocator<uchar>>::pointer, std::vector<uchar, std::allocator<uchar>>::size_type) (isz = 23) (sz = 32)
          -> INLINE (MANUAL): (573,14) std::__uninitialized_default_n_1<true>::__uninit_default_n<std::_Vector_base<uchar, std::allocator<uchar>>::pointer, std::vector<uchar, std::allocator<uchar>>::size_type>(std::_Vector_base<uchar, std::allocator<uchar>>::pointer, std::vector<uchar, std::allocator<uchar>>::size_type) (isz = 21) (sz = 30)
            -> INLINE (MANUAL): (540,11) std::fill_n<std::_Vector_base<uchar, std::allocator<uchar>>::pointer, std::vector<uchar, std::allocator<uchar>>::size_type, std::iterator_traits<std::_Vector_base<uchar, std::allocator<uchar>>::pointer>::value_type>(std::_Vector_base<uchar, std::allocator<uchar>>::pointer, std::vector<uchar, std::allocator<uchar>>::size_type, const std::iterator_traits<std::_Vector_base<uchar, std::allocator<uchar>>::pointer>::value_type &) (isz = 17) (sz = 28)
              -> INLINE (MANUAL): /usr/include/c++/5/bits/stl_algobase.h:(805,18) std::__fill_n_a<std::vector<uchar, std::allocator<uchar>>::size_type, uchar>(uchar *, std::vector<uchar, std::allocator<uchar>>::size_type, const uchar &) (isz = 12) (sz = 23)
                -> INLINE (MANUAL): (779,7) std::__fill_a<uchar>(uchar *, uchar *, const uchar &) (isz = 10) (sz = 19)
                  -> EXTERN: (723,2) __builtin_memset(void *, int, unsigned long)
              -> INLINE (MANUAL): /usr/include/c++/5/bits/stl_algobase.h:(805,34) std::__niter_base<std::_Vector_base<uchar, std::allocator<uchar>>::pointer>(std::_Vector_base<uchar, std::allocator<uchar>>::pointer) (isz = 1) (sz = 8)
                -> INLINE (MANUAL): (283,14) std::_Iter_base<std::_Vector_base<uchar, std::allocator<uchar>>::pointer, false>::_S_base(std::_Vector_base<uchar, std::allocator<uchar>>::pointer) (isz = 0) (sz = 5)
      -> INLINE (MANUAL): /usr/include/c++/5/bits/vector.tcc:(567,12) std::_Vector_base<uchar, std::allocator<uchar>>::_M_get_Tp_allocator(std::_Vector_base<uchar, std::allocator<uchar>> *) (isz = 1) (sz = 8)
      -> EXTERN: /usr/include/c++/5/bits/vector.tcc:(569,8) __cxa_begin_catch
      -> EXTERN: /usr/include/c++/5/bits/vector.tcc:(570,3) __cxa_end_catch
      -> DELETED: /usr/include/c++/5/bits/vector.tcc:(571,5) std::_Destroy<std::_Vector_base<uchar, std::allocator<uchar>>::pointer, uchar>(std::_Vector_base<uchar, std::allocator<uchar>>::pointer, std::_Vector_base<uchar, std::allocator<uchar>>::pointer, std::allocator<uchar> &) (isz = 0) (sz = 8)
      -> /usr/include/c++/5/bits/vector.tcc:(572,5) std::_Vector_base<uchar, std::allocator<uchar>>::_M_get_Tp_allocator(std::_Vector_base<uchar, std::allocator<uchar>> *) (isz = 1) (sz = 8)
         [[ Callee not marked with inlining pragma  <2>]]
      -> /usr/include/c++/5/bits/vector.tcc:(573,5) std::_Vector_base<uchar, std::allocator<uchar>>::_M_deallocate(std::_Vector_base<uchar, std::allocator<uchar>> *, std::_Vector_base<uchar, std::allocator<uchar>>::pointer, std::size_t) (isz = 4) (sz = 13)
         [[ Callee not marked with inlining pragma  <2>]]
      -> EXTERN: /usr/include/c++/5/bits/vector.tcc:(574,5) __cxa_rethrow
      -> DELETED: /usr/include/c++/5/bits/vector.tcc:(576,8) std::_Destroy<std::_Vector_base<uchar, std::allocator<uchar>>::pointer, uchar>(std::_Vector_base<uchar, std::allocator<uchar>>::pointer, std::_Vector_base<uchar, std::allocator<uchar>>::pointer, std::allocator<uchar> &) (isz = 0) (sz = 8)
      -> INLINE (MANUAL): /usr/include/c++/5/bits/vector.tcc:(577,8) std::_Vector_base<uchar, std::allocator<uchar>>::_M_get_Tp_allocator(std::_Vector_base<uchar, std::allocator<uchar>> *) (isz = 1) (sz = 8)
      -> INLINE (MANUAL): /usr/include/c++/5/bits/vector.tcc:(578,8) std::_Vector_base<uchar, std::allocator<uchar>>::_M_deallocate(std::_Vector_base<uchar, std::allocator<uchar>> *, std::_Vector_base<uchar, std::allocator<uchar>>::pointer, std::size_t) (isz = 4) (sz = 13)
        -> INLINE (MANUAL): /usr/include/c++/5/bits/stl_vector.h:(178,4) std::allocator_traits<std::allocator<uchar>>::deallocate(std::allocator_traits<std::allocator<uchar>>::allocator_type &, std::allocator_traits<std::allocator<uchar>>::pointer, std::allocator_traits<std::allocator<uchar>>::size_type) (isz = 0) (sz = 9)
          -> INLINE (MANUAL): /usr/include/c++/5/bits/alloc_traits.h:(517,13) __gnu_cxx::new_allocator<uchar>::deallocate(__gnu_cxx::new_allocator<uchar> *, __gnu_cxx::new_allocator<uchar>::pointer, __gnu_cxx::new_allocator<uchar>::size_type) (isz = 0) (sz = 7)
            -> EXTERN: /usr/include/c++/5/ext/new_allocator.h:(110,9) operator delete(void *)
    -> INLINE (MANUAL): /usr/include/c++/5/bits/stl_vector.h:(676,35) std::vector<uchar, std::allocator<uchar>>::size(const std::vector<uchar, std::allocator<uchar>> *) const (isz = 4) (sz = 11)
    -> INLINE (MANUAL): /usr/include/c++/5/bits/stl_vector.h:(677,24) std::vector<uchar, std::allocator<uchar>>::size(const std::vector<uchar, std::allocator<uchar>> *) const (isz = 4) (sz = 11)
    -> INLINE (MANUAL): /usr/include/c++/5/bits/stl_vector.h:(678,4) std::vector<uchar, std::allocator<uchar>>::_M_erase_at_end(std::vector<uchar, std::allocator<uchar>> *, std::vector<uchar, std::allocator<uchar>>::pointer) (isz = 13) (sz = 20)
      -> EXTERN: (1437,7) __cxa_call_unexpected
      -> DELETED: (1438,2) std::_Destroy<std::_Vector_base<uchar, std::allocator<uchar>>::pointer, uchar>(std::_Vector_base<uchar, std::allocator<uchar>>::pointer, std::_Vector_base<uchar, std::allocator<uchar>>::pointer, std::allocator<uchar> &) (isz = 0) (sz = 8)
      -> INLINE (MANUAL): (1438,48) std::_Vector_base<uchar, std::allocator<uchar>>::_M_get_Tp_allocator(std::_Vector_base<uchar, std::allocator<uchar>> *) (isz = 1) (sz = 8)
  -> (124,81) cv::Mat::~Mat(cv::Mat *) (isz = 60) (sz = 65)
     [[ Unable to inline callsite  <3>]]
  -> INLINE (MANUAL): (124,81) std::vector<uchar, std::allocator<uchar>>::front(std::vector<uchar, std::allocator<uchar>> *) (isz = 16) (sz = 23)
    -> INLINE (MANUAL): /usr/include/c++/5/bits/stl_vector.h:(852,16) __gnu_cxx::__normal_iterator<std::vector<uchar, std::allocator<uchar>>::pointer, std::vector<uchar, std::allocator<uchar>>>::operator*(const __gnu_cxx::__normal_iterator<std::vector<uchar, std::allocator<uchar>>::pointer, std::vector<uchar, std::allocator<uchar>>> *) const (isz = 0) (sz = 7)
    -> INLINE (MANUAL): /usr/include/c++/5/bits/stl_vector.h:(852,17) std::vector<uchar, std::allocator<uchar>>::begin(std::vector<uchar, std::allocator<uchar>> *) (isz = 8) (sz = 15)
      -> INLINE (MANUAL): (548,25) __gnu_cxx::__normal_iterator<std::vector<uchar, std::allocator<uchar>>::pointer, std::vector<uchar, std::allocator<uchar>>>::__normal_iterator(__gnu_cxx::__normal_iterator<std::vector<uchar, std::allocator<uchar>>::pointer, std::vector<uchar, std::allocator<uchar>>> *, const std::vector<uchar, std::allocator<uchar>>::pointer &) (isz = 0) (sz = 7)
  -> INLINE (MANUAL): (124,81) cv::Mat::Mat(cv::Mat *, int, int, int, void *, size_t) (isz = 234) (sz = 249)
    -> INLINE (MANUAL): /usr/local/include/opencv2/core/mat.inl.hpp:(426,6) cv::MatStep::MatStep(cv::MatStep *) (isz = 10) (sz = 15)
    -> INLINE (MANUAL): /usr/local/include/opencv2/core/mat.inl.hpp:(429,33) cv::MatSize::MatSize(cv::MatSize *, int *) (isz = 0) (sz = 6)
    -> INLINE (MANUAL): /usr/local/include/opencv2/core/mat.inl.hpp:(431,5) cv::Mat::total(const cv::Mat *) const (isz = 31) (sz = 39)
      -> INLINE (MANUAL): (806,18) cv::MatSize::operator[](const cv::MatSize *, int) const (isz = 1) (sz = 9)
    -> INLINE (MANUAL): /usr/local/include/opencv2/core/mat.inl.hpp:(431,5) cv::String::String(cv::String *, const char *) (isz = 16) (sz = 24)
      -> EXTERN: /usr/local/include/opencv2/core/cvstd.hpp:(621,18) strlen(const char *)
      -> EXTERN: /usr/local/include/opencv2/core/cvstd.hpp:(622,5) memcpy(void *, const void *, size_t)
      -> EXTERN: /usr/local/include/opencv2/core/cvstd.hpp:(622,12) cv::String::allocate(cv::String *, size_t)
    -> EXTERN: /usr/local/include/opencv2/core/mat.inl.hpp:(431,5) cv::error(int, const cv::String &, const char *, const char *, int)
    -> /usr/local/include/opencv2/core/mat.inl.hpp:(431,5) cv::String::~String(cv::String *) (isz = 5) (sz = 10)
       [[ Unable to inline callsite  <3>]]
    -> /usr/local/include/opencv2/core/mat.inl.hpp:(431,5) cv::String::~String(cv::String *) (isz = 5) (sz = 10)
       [[ Unable to inline callsite  <3>]]
    -> INLINE (MANUAL): /usr/local/include/opencv2/core/mat.inl.hpp:(447,13) cv::String::String(cv::String *, const char *) (isz = 16) (sz = 24)
      -> EXTERN: /usr/local/include/opencv2/core/cvstd.hpp:(621,18) strlen(const char *)
      -> EXTERN: /usr/local/include/opencv2/core/cvstd.hpp:(622,5) memcpy(void *, const void *, size_t)
      -> EXTERN: /usr/local/include/opencv2/core/cvstd.hpp:(622,12) cv::String::allocate(cv::String *, size_t)
    -> /usr/local/include/opencv2/core/mat.inl.hpp:(447,13) cv::String::~String(cv::String *) (isz = 5) (sz = 10)
       [[ Unable to inline callsite  <3>]]
    -> EXTERN: /usr/local/include/opencv2/core/mat.inl.hpp:(447,13) cv::error(int, const cv::String &, const char *, const char *, int)
    -> /usr/local/include/opencv2/core/mat.inl.hpp:(447,13) cv::String::~String(cv::String *) (isz = 5) (sz = 10)
       [[ Unable to inline callsite  <3>]]
    -> INLINE (MANUAL): /usr/local/include/opencv2/core/mat.inl.hpp:(452,9) cv::MatStep::operator[](cv::MatStep *, int) (isz = 1) (sz = 9)
    -> INLINE (MANUAL): /usr/local/include/opencv2/core/mat.inl.hpp:(453,9) cv::MatStep::operator[](cv::MatStep *, int) (isz = 1) (sz = 9)
  -> EXTERN: (126,12) interpolateBool(const cv::Mat &, float, float, float, float, float, float, cv::Mat &)
  -> EXTERN: (129,10) gaussianBlurInplace(cv::Mat &, float)
  -> EXTERN: (131,10) interpolate(const cv::Mat &, float, float, float, float, float, float, cv::Mat &)
  -> (133,10) cv::Mat::~Mat(cv::Mat *) (isz = 60) (sz = 65)
     [[ Unable to inline callsite  <3>]]
  -> (134,4) cv::Mat::~Mat(cv::Mat *) (isz = 60) (sz = 65)
     [[ Unable to inline callsite  <3>]]
  -> EXTERN: (139,7) interpolate(const cv::Mat &, float, float, float, float, float, float, cv::Mat &)


    Report from: Code generation optimizations [cg]

/usr/local/include/opencv2/core/cvstd.hpp(622,5):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (16, 0), and destination (alignment, offset): (1, 0)
/usr/include/c++/5/bits/stl_algobase.h(384,6):remark #34014: optimization advice for memmove: increase the destination's alignment to 16 (and use __assume_aligned) to speed up library implementation
/usr/include/c++/5/bits/stl_algobase.h(384,6):remark #34014: optimization advice for memmove: increase the source's alignment to 16 (and use __assume_aligned) to speed up library implementation
/usr/include/c++/5/bits/stl_algobase.h(384,6):remark #34026: call to memmove implemented as a call to optimized library version
/usr/include/c++/5/bits/stl_algobase.h(723,2):remark #34014: optimization advice for memset: increase the destination's alignment to 16 (and use __assume_aligned) to speed up library implementation
/usr/include/c++/5/bits/stl_algobase.h(723,2):remark #34026: call to memset implemented as a call to optimized library version
/usr/include/c++/5/bits/stl_algobase.h(723,2):remark #34014: optimization advice for memset: increase the destination's alignment to 16 (and use __assume_aligned) to speed up library implementation
/usr/include/c++/5/bits/stl_algobase.h(723,2):remark #34026: call to memset implemented as a call to optimized library version
affine.cpp(103,1):remark #34051: REGISTER ALLOCATION : [_ZN11AffineShape15normalizeAffineERKN2cv3MatEfffffff] affine.cpp:103

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   24[ rax rdx rcx rbx rbp rsi rdi r8-r10 r12-r15 zmm0-zmm9]
        
    Routine temporaries
        Total         :     185
            Global    :      47
            Local     :     138
        Regenerable   :      44
        Spilled       :      18
        
    Routine stack
        Variables     :     120 bytes*
            Reads     :       7 [9.19e-03 ~ 0.0%]
            Writes    :      20 [7.74e+00 ~ 6.5%]
        Spills        :      96 bytes*
            Reads     :      20 [9.74e+00 ~ 8.2%]
            Writes    :      12 [1.10e+01 ~ 9.3%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::_Destroy_aux<true>::__destroy<std::_Vector_base<uchar, std::allocator<uchar>>::pointer>(std::_Vector_base<uchar, std::allocator<uchar>>::pointer, std::_Vector_base<uchar, std::allocator<uchar>>::pointer)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::_Destroy_aux<true>::__destroy<std::_Vector_base<uchar, std::allocator<uchar>>::pointer>(std::_Vector_base<uchar, std::allocator<uchar>>::pointer, std::_Vector_base<uchar, std::allocator<uchar>>::pointer)) /usr/include/c++/5/bits/stl_construct.h(112,55)

===========================================================================

Begin optimization report for: std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<std::_Vector_base<uchar, std::allocator<uchar>>::pointer>, std::vector<uchar, std::allocator<uchar>>::pointer>(std::move_iterator<std::_Vector_base<uchar, std::allocator<uchar>>::pointer>, std::move_iterator<std::_Vector_base<uchar, std::allocator<uchar>>::pointer>, std::vector<uchar, std::allocator<uchar>>::pointer)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<std::_Vector_base<uchar, std::allocator<uchar>>::pointer>, std::vector<uchar, std::allocator<uchar>>::pointer>(std::move_iterator<std::_Vector_base<uchar, std::allocator<uchar>>::pointer>, std::move_iterator<std::_Vector_base<uchar, std::allocator<uchar>>::pointer>, std::vector<uchar, std::allocator<uchar>>::pointer)) /usr/include/c++/5/bits/stl_uninitialized.h(93,9)

===========================================================================

Begin optimization report for: std::__uninitialized_default_n_1<true>::__uninit_default_n<std::_Vector_base<uchar, std::allocator<uchar>>::pointer, std::vector<uchar, std::allocator<uchar>>::size_type>(std::_Vector_base<uchar, std::allocator<uchar>>::pointer, std::vector<uchar, std::allocator<uchar>>::size_type)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__uninitialized_default_n_1<true>::__uninit_default_n<std::_Vector_base<uchar, std::allocator<uchar>>::pointer, std::vector<uchar, std::allocator<uchar>>::size_type>(std::_Vector_base<uchar, std::allocator<uchar>>::pointer, std::vector<uchar, std::allocator<uchar>>::size_type)) /usr/include/c++/5/bits/stl_uninitialized.h(536,9)

===========================================================================

Begin optimization report for: std::allocator_traits<std::allocator<uchar>>::allocate(std::allocator_traits<std::allocator<uchar>>::allocator_type &, std::allocator_traits<std::allocator<uchar>>::size_type)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::allocator_traits<std::allocator<uchar>>::allocate(std::allocator_traits<std::allocator<uchar>>::allocator_type &, std::allocator_traits<std::allocator<uchar>>::size_type)) /usr/include/c++/5/bits/alloc_traits.h(491,7)

===========================================================================

Begin optimization report for: std::allocator_traits<std::allocator<uchar>>::deallocate(std::allocator_traits<std::allocator<uchar>>::allocator_type &, std::allocator_traits<std::allocator<uchar>>::pointer, std::allocator_traits<std::allocator<uchar>>::size_type)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::allocator_traits<std::allocator<uchar>>::deallocate(std::allocator_traits<std::allocator<uchar>>::allocator_type &, std::allocator_traits<std::allocator<uchar>>::pointer, std::allocator_traits<std::allocator<uchar>>::size_type)) /usr/include/c++/5/bits/alloc_traits.h(517,7)

===========================================================================

Begin optimization report for: std::allocator_traits<std::allocator<uchar>>::max_size(const std::allocator_traits<std::allocator<uchar>>::allocator_type &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::allocator_traits<std::allocator<uchar>>::max_size(const std::allocator_traits<std::allocator<uchar>>::allocator_type &)) /usr/include/c++/5/bits/alloc_traits.h(551,7)

===========================================================================

Begin optimization report for: std::_Vector_base<uchar, std::allocator<uchar>>::_M_get_Tp_allocator(const std::_Vector_base<uchar, std::allocator<uchar>> *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::_Vector_base<uchar, std::allocator<uchar>>::_M_get_Tp_allocator(const std::_Vector_base<uchar, std::allocator<uchar>> *) const) /usr/include/c++/5/bits/stl_vector.h(118,7)

===========================================================================

Begin optimization report for: std::_Vector_base<uchar, std::allocator<uchar>>::_M_allocate(std::_Vector_base<uchar, std::allocator<uchar>> *, std::size_t)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::_Vector_base<uchar, std::allocator<uchar>>::_M_allocate(std::_Vector_base<uchar, std::allocator<uchar>> *, std::size_t)) /usr/include/c++/5/bits/stl_vector.h(168,7)

===========================================================================

Begin optimization report for: std::vector<uchar, std::allocator<uchar>>::begin(std::vector<uchar, std::allocator<uchar>> *)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::vector<uchar, std::allocator<uchar>>::begin(std::vector<uchar, std::allocator<uchar>> *)) /usr/include/c++/5/bits/stl_vector.h(548,7)

===========================================================================

Begin optimization report for: std::vector<uchar, std::allocator<uchar>>::size(const std::vector<uchar, std::allocator<uchar>> *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::vector<uchar, std::allocator<uchar>>::size(const std::vector<uchar, std::allocator<uchar>> *) const) /usr/include/c++/5/bits/stl_vector.h(655,7)

===========================================================================

Begin optimization report for: std::vector<uchar, std::allocator<uchar>>::max_size(const std::vector<uchar, std::allocator<uchar>> *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::vector<uchar, std::allocator<uchar>>::max_size(const std::vector<uchar, std::allocator<uchar>> *) const) /usr/include/c++/5/bits/stl_vector.h(660,7)

===========================================================================

Begin optimization report for: std::vector<uchar, std::allocator<uchar>>::resize(std::vector<uchar, std::allocator<uchar>> *, std::vector<uchar, std::allocator<uchar>>::size_type)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::vector<uchar, std::allocator<uchar>>::resize(std::vector<uchar, std::allocator<uchar>> *, std::vector<uchar, std::allocator<uchar>>::size_type)) /usr/include/c++/5/bits/stl_vector.h(674,7)

===========================================================================

Begin optimization report for: std::vector<uchar, std::allocator<uchar>>::front(std::vector<uchar, std::allocator<uchar>> *)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::vector<uchar, std::allocator<uchar>>::front(std::vector<uchar, std::allocator<uchar>> *)) /usr/include/c++/5/bits/stl_vector.h(852,7)

===========================================================================

Begin optimization report for: std::vector<uchar, std::allocator<uchar>>::_M_default_append(std::vector<uchar, std::allocator<uchar>> *, std::vector<uchar, std::allocator<uchar>>::size_type)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::vector<uchar, std::allocator<uchar>>::_M_default_append(std::vector<uchar, std::allocator<uchar>> *, std::vector<uchar, std::allocator<uchar>>::size_type)) /usr/include/c++/5/bits/vector.tcc(542,5)

===========================================================================

Begin optimization report for: std::vector<uchar, std::allocator<uchar>>::_M_check_len(const std::vector<uchar, std::allocator<uchar>> *, std::vector<uchar, std::allocator<uchar>>::size_type, const char *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::vector<uchar, std::allocator<uchar>>::_M_check_len(const std::vector<uchar, std::allocator<uchar>> *, std::vector<uchar, std::allocator<uchar>>::size_type, const char *) const) /usr/include/c++/5/bits/stl_vector.h(1423,7)

===========================================================================

Begin optimization report for: std::vector<uchar, std::allocator<uchar>>::_M_erase_at_end(std::vector<uchar, std::allocator<uchar>> *, std::vector<uchar, std::allocator<uchar>>::pointer)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::vector<uchar, std::allocator<uchar>>::_M_erase_at_end(std::vector<uchar, std::allocator<uchar>> *, std::vector<uchar, std::allocator<uchar>>::pointer)) /usr/include/c++/5/bits/stl_vector.h(1437,7)

===========================================================================

Begin optimization report for: std::__copy_move<true, true, std::iterator_traits<std::vector<std::seed_seq::result_type, std::allocator<std::seed_seq::result_type>>::pointer>::iterator_category>::__copy_m<uchar>(const uchar *, const uchar *, uchar *)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__copy_move<true, true, std::iterator_traits<std::vector<std::seed_seq::result_type, std::allocator<std::seed_seq::result_type>>::pointer>::iterator_category>::__copy_m<uchar>(const uchar *, const uchar *, uchar *)) /usr/include/c++/5/bits/stl_algobase.h(374,9)

===========================================================================

Begin optimization report for: std::_Iter_base<std::_Vector_base<uchar, std::allocator<uchar>>::pointer, false>::_S_base(std::_Vector_base<uchar, std::allocator<uchar>>::pointer)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::_Iter_base<std::_Vector_base<uchar, std::allocator<uchar>>::pointer, false>::_S_base(std::_Vector_base<uchar, std::allocator<uchar>>::pointer)) /usr/include/c++/5/bits/stl_iterator_base_types.h(216,7)

===========================================================================

Begin optimization report for: std::move_iterator<std::_Vector_base<uchar, std::allocator<uchar>>::pointer>::move_iterator(std::move_iterator<std::_Vector_base<uchar, std::allocator<uchar>>::pointer> *, std::move_iterator<std::_Vector_base<uchar, std::allocator<uchar>>::pointer>::iterator_type)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::move_iterator<std::_Vector_base<uchar, std::allocator<uchar>>::pointer>::move_iterator(std::move_iterator<std::_Vector_base<uchar, std::allocator<uchar>>::pointer> *, std::move_iterator<std::_Vector_base<uchar, std::allocator<uchar>>::pointer>::iterator_type)) /usr/include/c++/5/bits/stl_iterator.h(985,25)

===========================================================================

Begin optimization report for: std::move_iterator<std::_Vector_base<uchar, std::allocator<uchar>>::pointer>::base(const std::move_iterator<std::_Vector_base<uchar, std::allocator<uchar>>::pointer> *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::move_iterator<std::_Vector_base<uchar, std::allocator<uchar>>::pointer>::base(const std::move_iterator<std::_Vector_base<uchar, std::allocator<uchar>>::pointer> *) const) /usr/include/c++/5/bits/stl_iterator.h(993,7)

===========================================================================

Begin optimization report for: std::_Iter_base<std::move_iterator<std::_Vector_base<uchar, std::allocator<uchar>>::pointer>, true>::_S_base(std::move_iterator<std::_Vector_base<uchar, std::allocator<uchar>>::pointer>)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::_Iter_base<std::move_iterator<std::_Vector_base<uchar, std::allocator<uchar>>::pointer>, true>::_S_base(std::move_iterator<std::_Vector_base<uchar, std::allocator<uchar>>::pointer>)) /usr/include/c++/5/bits/stl_iterator_base_types.h(224,7)

===========================================================================

Begin optimization report for: __gnu_cxx::new_allocator<uchar>::allocate(__gnu_cxx::new_allocator<uchar> *, __gnu_cxx::new_allocator<uchar>::size_type, const void *)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (__gnu_cxx::new_allocator<uchar>::allocate(__gnu_cxx::new_allocator<uchar> *, __gnu_cxx::new_allocator<uchar>::size_type, const void *)) /usr/include/c++/5/ext/new_allocator.h(100,7)

===========================================================================

Begin optimization report for: __gnu_cxx::new_allocator<uchar>::deallocate(__gnu_cxx::new_allocator<uchar> *, __gnu_cxx::new_allocator<uchar>::pointer, __gnu_cxx::new_allocator<uchar>::size_type)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (__gnu_cxx::new_allocator<uchar>::deallocate(__gnu_cxx::new_allocator<uchar> *, __gnu_cxx::new_allocator<uchar>::pointer, __gnu_cxx::new_allocator<uchar>::size_type)) /usr/include/c++/5/ext/new_allocator.h(110,7)

===========================================================================

Begin optimization report for: __gnu_cxx::__normal_iterator<std::vector<uchar, std::allocator<uchar>>::pointer, std::vector<uchar, std::allocator<uchar>>>::__normal_iterator(__gnu_cxx::__normal_iterator<std::vector<uchar, std::allocator<uchar>>::pointer, std::vector<uchar, std::allocator<uchar>>> *, const std::vector<uchar, std::allocator<uchar>>::pointer &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (__gnu_cxx::__normal_iterator<std::vector<uchar, std::allocator<uchar>>::pointer, std::vector<uchar, std::allocator<uchar>>>::__normal_iterator(__gnu_cxx::__normal_iterator<std::vector<uchar, std::allocator<uchar>>::pointer, std::vector<uchar, std::allocator<uchar>>> *, const std::vector<uchar, std::allocator<uchar>>::pointer &)) /usr/include/c++/5/bits/stl_iterator.h(741,25)

===========================================================================

Begin optimization report for: __gnu_cxx::__normal_iterator<std::vector<uchar, std::allocator<uchar>>::pointer, std::vector<uchar, std::allocator<uchar>>>::operator*(const __gnu_cxx::__normal_iterator<std::vector<uchar, std::allocator<uchar>>::pointer, std::vector<uchar, std::allocator<uchar>>> *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (__gnu_cxx::__normal_iterator<std::vector<uchar, std::allocator<uchar>>::pointer, std::vector<uchar, std::allocator<uchar>>>::operator*(const __gnu_cxx::__normal_iterator<std::vector<uchar, std::allocator<uchar>>::pointer, std::vector<uchar, std::allocator<uchar>>> *) const) /usr/include/c++/5/bits/stl_iterator.h(754,7)

===========================================================================

Begin optimization report for: cv::String::String(cv::String *, const char *)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (cv::String::String(cv::String *, const char *)) /usr/local/include/opencv2/core/cvstd.hpp(619,1)

===========================================================================

Begin optimization report for: cv::MatSize::MatSize(cv::MatSize *, int *)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (cv::MatSize::MatSize(cv::MatSize *, int *)) /usr/local/include/opencv2/core/mat.inl.hpp(1246,13)

===========================================================================

Begin optimization report for: cv::MatSize::operator[](const cv::MatSize *, int) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (cv::MatSize::operator[](const cv::MatSize *, int) const) /usr/local/include/opencv2/core/mat.inl.hpp(1257,1)

===========================================================================

Begin optimization report for: cv::MatStep::MatStep(cv::MatStep *)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (cv::MatStep::MatStep(cv::MatStep *)) /usr/local/include/opencv2/core/mat.inl.hpp(1301,1)

===========================================================================

Begin optimization report for: cv::MatStep::operator[](cv::MatStep *, int)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (cv::MatStep::operator[](cv::MatStep *, int)) /usr/local/include/opencv2/core/mat.inl.hpp(1319,1)

===========================================================================

Begin optimization report for: cv::Mat::Mat(cv::Mat *, int, int, int, void *, size_t)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (cv::Mat::Mat(cv::Mat *, int, int, int, void *, size_t)) /usr/local/include/opencv2/core/mat.inl.hpp(430,1)

===========================================================================

Begin optimization report for: cv::Mat::release(cv::Mat *)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (cv::Mat::release(cv::Mat *)) /usr/local/include/opencv2/core/mat.inl.hpp(702,1)

===========================================================================

Begin optimization report for: cv::Mat::total(const cv::Mat *) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (cv::Mat::total(const cv::Mat *) const) /usr/local/include/opencv2/core/mat.inl.hpp(801,1)

===========================================================================

Begin optimization report for: cv::Mat::at<float>(const cv::Mat *, int, int) const

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (cv::Mat::at<float>(const cv::Mat *, int, int) const) /usr/local/include/opencv2/core/mat.inl.hpp(963,1)

===========================================================================

Begin optimization report for: cv::Mat::at<float>(cv::Mat *, int, int)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (cv::Mat::at<float>(cv::Mat *, int, int)) /usr/local/include/opencv2/core/mat.inl.hpp(952,1)

===========================================================================

Begin optimization report for: cv::Mat::ptr<float>(cv::Mat *, int)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (cv::Mat::ptr<float>(cv::Mat *, int)) /usr/local/include/opencv2/core/mat.inl.hpp(826,1)

===========================================================================

Begin optimization report for: std::max<std::vector<std::seed_seq::result_type, std::allocator<std::seed_seq::result_type>>::size_type>(const std::vector<std::seed_seq::result_type, std::allocator<std::seed_seq::result_type>>::size_type &, const std::vector<std::seed_seq::result_type, std::allocator<std::seed_seq::result_type>>::size_type &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::max<std::vector<std::seed_seq::result_type, std::allocator<std::seed_seq::result_type>>::size_type>(const std::vector<std::seed_seq::result_type, std::allocator<std::seed_seq::result_type>>::size_type &, const std::vector<std::seed_seq::result_type, std::allocator<std::seed_seq::result_type>>::size_type &)) /usr/include/c++/5/bits/stl_algobase.h(220,5)

===========================================================================

Begin optimization report for: std::_Destroy<std::_Vector_base<uchar, std::allocator<uchar>>::pointer>(std::_Vector_base<uchar, std::allocator<uchar>>::pointer, std::_Vector_base<uchar, std::allocator<uchar>>::pointer)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::_Destroy<std::_Vector_base<uchar, std::allocator<uchar>>::pointer>(std::_Vector_base<uchar, std::allocator<uchar>>::pointer, std::_Vector_base<uchar, std::allocator<uchar>>::pointer)) /usr/include/c++/5/bits/stl_construct.h(123,5)

===========================================================================

Begin optimization report for: std::__uninitialized_default_n_a<std::_Vector_base<uchar, std::allocator<uchar>>::pointer, std::vector<uchar, std::allocator<uchar>>::size_type, uchar>(std::_Vector_base<uchar, std::allocator<uchar>>::pointer, std::vector<uchar, std::allocator<uchar>>::size_type, std::allocator<uchar> &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__uninitialized_default_n_a<std::_Vector_base<uchar, std::allocator<uchar>>::pointer, std::vector<uchar, std::allocator<uchar>>::size_type, uchar>(std::_Vector_base<uchar, std::allocator<uchar>>::pointer, std::vector<uchar, std::allocator<uchar>>::size_type, std::allocator<uchar> &)) /usr/include/c++/5/bits/stl_uninitialized.h(637,5)

===========================================================================

Begin optimization report for: std::__uninitialized_default_n<std::_Vector_base<uchar, std::allocator<uchar>>::pointer, std::vector<uchar, std::allocator<uchar>>::size_type>(std::_Vector_base<uchar, std::allocator<uchar>>::pointer, std::vector<uchar, std::allocator<uchar>>::size_type)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__uninitialized_default_n<std::_Vector_base<uchar, std::allocator<uchar>>::pointer, std::vector<uchar, std::allocator<uchar>>::size_type>(std::_Vector_base<uchar, std::allocator<uchar>>::pointer, std::vector<uchar, std::allocator<uchar>>::size_type)) /usr/include/c++/5/bits/stl_uninitialized.h(567,5)

===========================================================================

Begin optimization report for: std::fill_n<std::_Vector_base<uchar, std::allocator<uchar>>::pointer, std::vector<uchar, std::allocator<uchar>>::size_type, std::iterator_traits<std::_Vector_base<uchar, std::allocator<uchar>>::pointer>::value_type>(std::_Vector_base<uchar, std::allocator<uchar>>::pointer, std::vector<uchar, std::allocator<uchar>>::size_type, const std::iterator_traits<std::_Vector_base<uchar, std::allocator<uchar>>::pointer>::value_type &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::fill_n<std::_Vector_base<uchar, std::allocator<uchar>>::pointer, std::vector<uchar, std::allocator<uchar>>::size_type, std::iterator_traits<std::_Vector_base<uchar, std::allocator<uchar>>::pointer>::value_type>(std::_Vector_base<uchar, std::allocator<uchar>>::pointer, std::vector<uchar, std::allocator<uchar>>::size_type, const std::iterator_traits<std::_Vector_base<uchar, std::allocator<uchar>>::pointer>::value_type &)) /usr/include/c++/5/bits/stl_algobase.h(801,5)

===========================================================================

Begin optimization report for: std::__niter_base<std::_Vector_base<uchar, std::allocator<uchar>>::pointer>(std::_Vector_base<uchar, std::allocator<uchar>>::pointer)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__niter_base<std::_Vector_base<uchar, std::allocator<uchar>>::pointer>(std::_Vector_base<uchar, std::allocator<uchar>>::pointer)) /usr/include/c++/5/bits/stl_algobase.h(283,5)

===========================================================================

Begin optimization report for: std::__fill_n_a<std::vector<uchar, std::allocator<uchar>>::size_type, uchar>(uchar *, std::vector<uchar, std::allocator<uchar>>::size_type, const uchar &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (std::__fill_n_a<std::vector<uchar, std::allocator<uchar>>::size_type, uchar>(uchar *, std::vector<uchar, std::allocator<uchar>>::size_type, const uchar &)) [52/62=83.9%] /usr/include/c++/5/bits/stl_algobase.h(778,5)
  -> INLINE (MANUAL): (779,7) std::__fill_a<uchar>(uchar *, uchar *, const uchar &) (isz = 10) (sz = 19)
    -> EXTERN: (723,2) __builtin_memset(void *, int, unsigned long)


    Report from: Code generation optimizations [cg]

/usr/include/c++/5/bits/stl_algobase.h(723,2):remark #34014: optimization advice for memset: increase the destination's alignment to 16 (and use __assume_aligned) to speed up library implementation
/usr/include/c++/5/bits/stl_algobase.h(723,2):remark #34026: call to memset implemented as a call to optimized library version
/usr/include/c++/5/bits/stl_algobase.h(778,5):remark #34051: REGISTER ALLOCATION : [_ZSt10__fill_n_aImhEN9__gnu_cxx11__enable_ifIXsr3std9__is_byteIT0_EE7__valueEPS2_E6__typeES3_T_RKS2_] /usr/include/c++/5/bits/stl_algobase.h:778

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    6[ rax rdx rcx rsi rdi r15]
        
    Routine temporaries
        Total         :      18
            Global    :      10
            Local     :       8
        Regenerable   :       0
        Spilled       :       1
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::__fill_a<uchar>(uchar *, uchar *, const uchar &)

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (std::__fill_a<uchar>(uchar *, uchar *, const uchar &)) [53/62=85.5%] /usr/include/c++/5/bits/stl_algobase.h(720,5)
  -> EXTERN: (723,2) __builtin_memset(void *, int, unsigned long)


    Report from: Code generation optimizations [cg]

/usr/include/c++/5/bits/stl_algobase.h(723,2):remark #34014: optimization advice for memset: increase the destination's alignment to 16 (and use __assume_aligned) to speed up library implementation
/usr/include/c++/5/bits/stl_algobase.h(723,2):remark #34026: call to memset implemented as a call to optimized library version
/usr/include/c++/5/bits/stl_algobase.h(720,5):remark #34051: REGISTER ALLOCATION : [_ZSt8__fill_aIhEN9__gnu_cxx11__enable_ifIXsr3std9__is_byteIT_EE7__valueEvE6__typeEPS2_S5_RKS2_] /usr/include/c++/5/bits/stl_algobase.h:720

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    4[ rax rdx rsi rdi]
        
    Routine temporaries
        Total         :      17
            Global    :       9
            Local     :       8
        Regenerable   :       0
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: std::__uninitialized_move_if_noexcept_a<std::_Vector_base<uchar, std::allocator<uchar>>::pointer, std::vector<uchar, std::allocator<uchar>>::pointer, std::_Vector_base<uchar, std::allocator<uchar>>::_Tp_alloc_type>(std::_Vector_base<uchar, std::allocator<uchar>>::pointer, std::_Vector_base<uchar, std::allocator<uchar>>::pointer, std::vector<uchar, std::allocator<uchar>>::pointer, std::_Vector_base<uchar, std::allocator<uchar>>::_Tp_alloc_type &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__uninitialized_move_if_noexcept_a<std::_Vector_base<uchar, std::allocator<uchar>>::pointer, std::vector<uchar, std::allocator<uchar>>::pointer, std::_Vector_base<uchar, std::allocator<uchar>>::_Tp_alloc_type>(std::_Vector_base<uchar, std::allocator<uchar>>::pointer, std::_Vector_base<uchar, std::allocator<uchar>>::pointer, std::vector<uchar, std::allocator<uchar>>::pointer, std::_Vector_base<uchar, std::allocator<uchar>>::_Tp_alloc_type &)) /usr/include/c++/5/bits/stl_uninitialized.h(301,5)

===========================================================================

Begin optimization report for: std::__make_move_if_noexcept_iterator<std::_Vector_base<uchar, std::allocator<uchar>>::pointer, std::move_iterator<std::_Vector_base<uchar, std::allocator<uchar>>::pointer>>(std::_Vector_base<uchar, std::allocator<uchar>>::pointer)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__make_move_if_noexcept_iterator<std::_Vector_base<uchar, std::allocator<uchar>>::pointer, std::move_iterator<std::_Vector_base<uchar, std::allocator<uchar>>::pointer>>(std::_Vector_base<uchar, std::allocator<uchar>>::pointer)) /usr/include/c++/5/bits/stl_iterator.h(1167,5)

===========================================================================

Begin optimization report for: std::__uninitialized_copy_a<std::move_iterator<std::_Vector_base<uchar, std::allocator<uchar>>::pointer>, std::vector<uchar, std::allocator<uchar>>::pointer, uchar>(std::move_iterator<std::_Vector_base<uchar, std::allocator<uchar>>::pointer>, std::move_iterator<std::_Vector_base<uchar, std::allocator<uchar>>::pointer>, std::vector<uchar, std::allocator<uchar>>::pointer, std::allocator<uchar> &)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__uninitialized_copy_a<std::move_iterator<std::_Vector_base<uchar, std::allocator<uchar>>::pointer>, std::vector<uchar, std::allocator<uchar>>::pointer, uchar>(std::move_iterator<std::_Vector_base<uchar, std::allocator<uchar>>::pointer>, std::move_iterator<std::_Vector_base<uchar, std::allocator<uchar>>::pointer>, std::vector<uchar, std::allocator<uchar>>::pointer, std::allocator<uchar> &)) /usr/include/c++/5/bits/stl_uninitialized.h(281,5)

===========================================================================

Begin optimization report for: std::uninitialized_copy<std::move_iterator<std::_Vector_base<uchar, std::allocator<uchar>>::pointer>, std::vector<uchar, std::allocator<uchar>>::pointer>(std::move_iterator<std::_Vector_base<uchar, std::allocator<uchar>>::pointer>, std::move_iterator<std::_Vector_base<uchar, std::allocator<uchar>>::pointer>, std::vector<uchar, std::allocator<uchar>>::pointer)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::uninitialized_copy<std::move_iterator<std::_Vector_base<uchar, std::allocator<uchar>>::pointer>, std::vector<uchar, std::allocator<uchar>>::pointer>(std::move_iterator<std::_Vector_base<uchar, std::allocator<uchar>>::pointer>, std::move_iterator<std::_Vector_base<uchar, std::allocator<uchar>>::pointer>, std::vector<uchar, std::allocator<uchar>>::pointer)) /usr/include/c++/5/bits/stl_uninitialized.h(109,5)

===========================================================================

Begin optimization report for: std::copy<std::move_iterator<std::_Vector_base<uchar, std::allocator<uchar>>::pointer>, std::vector<uchar, std::allocator<uchar>>::pointer>(std::move_iterator<std::_Vector_base<uchar, std::allocator<uchar>>::pointer>, std::move_iterator<std::_Vector_base<uchar, std::allocator<uchar>>::pointer>, std::vector<uchar, std::allocator<uchar>>::pointer)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::copy<std::move_iterator<std::_Vector_base<uchar, std::allocator<uchar>>::pointer>, std::vector<uchar, std::allocator<uchar>>::pointer>(std::move_iterator<std::_Vector_base<uchar, std::allocator<uchar>>::pointer>, std::move_iterator<std::_Vector_base<uchar, std::allocator<uchar>>::pointer>, std::vector<uchar, std::allocator<uchar>>::pointer)) /usr/include/c++/5/bits/stl_algobase.h(463,5)

===========================================================================

Begin optimization report for: std::__miter_base<std::move_iterator<std::_Vector_base<uchar, std::allocator<uchar>>::pointer>>(std::move_iterator<std::_Vector_base<uchar, std::allocator<uchar>>::pointer>)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__miter_base<std::move_iterator<std::_Vector_base<uchar, std::allocator<uchar>>::pointer>>(std::move_iterator<std::_Vector_base<uchar, std::allocator<uchar>>::pointer>)) /usr/include/c++/5/bits/stl_algobase.h(294,5)

===========================================================================

Begin optimization report for: std::__copy_move_a2<true, std::_Iter_base<std::move_iterator<std::_Vector_base<uchar, std::allocator<uchar>>::pointer>, true>::iterator_type, std::vector<uchar, std::allocator<uchar>>::pointer>(std::_Iter_base<std::move_iterator<std::_Vector_base<uchar, std::allocator<uchar>>::pointer>, true>::iterator_type, std::_Iter_base<std::move_iterator<std::_Vector_base<uchar, std::allocator<uchar>>::pointer>, true>::iterator_type, std::vector<uchar, std::allocator<uchar>>::pointer)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__copy_move_a2<true, std::_Iter_base<std::move_iterator<std::_Vector_base<uchar, std::allocator<uchar>>::pointer>, true>::iterator_type, std::vector<uchar, std::allocator<uchar>>::pointer>(std::_Iter_base<std::move_iterator<std::_Vector_base<uchar, std::allocator<uchar>>::pointer>, true>::iterator_type, std::_Iter_base<std::move_iterator<std::_Vector_base<uchar, std::allocator<uchar>>::pointer>, true>::iterator_type, std::vector<uchar, std::allocator<uchar>>::pointer)) /usr/include/c++/5/bits/stl_algobase.h(437,5)

===========================================================================

Begin optimization report for: std::__copy_move_a<true, std::_Iter_base<std::_Vector_base<uchar, std::allocator<uchar>>::pointer, false>::iterator_type, std::_Iter_base<std::_Vector_base<uchar, std::allocator<uchar>>::pointer, false>::iterator_type>(std::_Iter_base<std::_Vector_base<uchar, std::allocator<uchar>>::pointer, false>::iterator_type, std::_Iter_base<std::_Vector_base<uchar, std::allocator<uchar>>::pointer, false>::iterator_type, std::_Iter_base<std::_Vector_base<uchar, std::allocator<uchar>>::pointer, false>::iterator_type)

    Report from: Interprocedural optimizations [ipo]

DEAD STATIC FUNCTION: (std::__copy_move_a<true, std::_Iter_base<std::_Vector_base<uchar, std::allocator<uchar>>::pointer, false>::iterator_type, std::_Iter_base<std::_Vector_base<uchar, std::allocator<uchar>>::pointer, false>::iterator_type>(std::_Iter_base<std::_Vector_base<uchar, std::allocator<uchar>>::pointer, false>::iterator_type, std::_Iter_base<std::_Vector_base<uchar, std::allocator<uchar>>::pointer, false>::iterator_type, std::_Iter_base<std::_Vector_base<uchar, std::allocator<uchar>>::pointer, false>::iterator_type)) /usr/include/c++/5/bits/stl_algobase.h(392,5)

===========================================================================

Begin optimization report for: __sti__$E()

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (__sti__$E()) [62/62=100.0%] <compiler generated>
  -> EXTERN: /usr/include/c++/5/iostream:(74,25) __cxa_atexit()
  -> EXTERN: /usr/include/c++/5/iostream:(74,25) std::ios_base::Init::Init(std::ios_base::Init *)


    Report from: Code generation optimizations [cg]

<compiler generated>:remark #34051: REGISTER ALLOCATION : [__sti__$E] (null):0

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :    3[ rdx rsi rdi]
        
    Routine temporaries
        Total         :      13
            Global    :       7
            Local     :       6
        Regenerable   :       7
        Spilled       :       0
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

    Report from: Interprocedural optimizations [ipo]

INLINING FOOTNOTES:

<1> The indirectly called function must be resolved to its targets before it 
can be inlined.  Consider compiling with -ipo or -prof-gen followed by 
-prof-use.

<2> The compiler's heuristics indicate that the function is not profitable to 
    inline.  Override this decision by adding "inline 
    __attribute__((always_inline))" to the declaration of the called function, 
    or add "#pragma forceinline" before the call site.

<3> Inlining the function will lead to incorrect program behavior.

